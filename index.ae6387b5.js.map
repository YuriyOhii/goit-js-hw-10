{"mappings":"AAAA,IAAAA,EAAe,CACbC,OAAQC,SAASC,cAAc,oBAC/BC,OAAQF,SAASC,cAAc,mBAC/BE,aAAcH,SAASC,cAAc,kBACrCG,cAAeJ,SAASC,cAAc,iBCFxC,SAASI,EAAaC,GACpB,MAAMC,EAAuBD,EAC1BE,KAAIC,GAAS,kBAAkBA,EAAMC,OAAOD,EAAME,kBAClDC,KAAK,IACRd,EAAKC,OAAOc,mBAAmB,YAAaN,E,CAG9C,SAASO,EAAcR,GACrB,MAAMS,EAAMT,EAAK,GAAGU,OAAO,GACrBC,EAAgB,mCAAmCX,EAAK,GAAGY,oBAAoBH,EAAIJ,kFACpCI,EAAIJ,+DACRI,EAAII,qEACJJ,EAAIK,wBAErDtB,EAAKM,cAAciB,UAAYJ,C,CAGjC,SAASK,EAAiBC,GACxBzB,EAAKC,OAAOyB,UAAUC,IAAI,aAC1B3B,EAAKI,OAAOsB,UAAUC,IAAI,aAC1B3B,EAAKK,aAAaU,mBAAmB,YAAY,IAAIU,KACrDzB,EAAKK,aAAaqB,UAAUE,OAAO,Y,CClBrC,MAAMC,EAAU,ICLhB,MACIC,GACAC,GACFC,cACEC,MAAKH,EACH,wEACFG,MAAKF,EAAY,gCACjBE,KAAKC,WAAa,I,CAGpBC,cACE,MAAMC,EAAU,IAAIC,gBAAgB,CAClCC,QAASL,MAAKH,IAEd,OAAOS,MAAM,GAAGN,MAAKF,WAAmBK,KAAWI,MAAKC,IACtD,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MAAM,G,CAI5BC,kBACF,MAAMV,EAAU,IAAIC,gBAAgB,CAClCC,QAASL,MAAKH,EACdiB,UAAWd,KAAKC,aAElB,OAAOK,MAAM,GAAGN,MAAKF,kBAA0BK,KAAWI,MAAKC,IAC7D,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MAAM,G,CAIlBG,aAASC,GACXhB,KAAKC,WAAae,C,GDzBtBjD,EAAKC,OAAOiD,iBAAiB,UAY7B,UAAuBC,OAAEA,IACvBnD,EAAKM,cAAciB,UAAY,GAC/BvB,EAAKI,OAAOsB,UAAUE,OAAO,aAC7BC,EAAQmB,SAAWG,EAAOC,MAE1BvB,EACGiB,kBACAN,MAAKhC,IACJQ,EAAcR,GACdR,EAAKI,OAAOsB,UAAUC,IAAI,YAAY,IAEvC0B,MAAM7B,E,IArBXK,EACGM,cACAK,MAAKhC,IACJD,EAAaC,GACbR,EAAKC,OAAOyB,UAAUE,OAAO,YAAY,IAE1CyB,MAAM7B,GAEN8B,QAAQtD,EAAKI,OAAOsB,UAAUC,IAAI","sources":["src/js/refs.js","src/js/functions.js","src/js/index.js","src/js/cat-api.js"],"sourcesContent":["export default {\n  select: document.querySelector('.js-breed-select'),\n  loader: document.querySelector('.js-loader-text'),\n  errorMessage: document.querySelector('.js-text-error'),\n  cardContainer: document.querySelector('.js-cat-info'),\n};","import refs from './refs.js';\n\nfunction fillInBreeds(data) {\n  const breedsSelectorMarkup = data\n    .map(breed => `<option value=\"${breed.id}\">${breed.name}</option>`)\n    .join('');\n  refs.select.insertAdjacentHTML('beforeend', breedsSelectorMarkup);\n}\n\nfunction renderCatCard(data) {\n  const cat = data[0].breeds[0];\n  const catCardMarkup = `<img class=\"card-img item\" src=\"${data[0].url}\" alt=\"Cat of ${cat.name} breed\" width=\"480\">\n <div class=\"text-wrap item\"> <h2 class=\"card-title\">${cat.name}</h2>\n  <p class=\"cat-description\"><b>Description: </b>${cat.description}</p>\n  <p class=\"cat-temperament\"><b>Temperament: </b>${cat.temperament}</p></div>`;\n\n  refs.cardContainer.innerHTML = catCardMarkup;\n};\n\nfunction showErrorMessage(er) {\n  refs.select.classList.add('is-hidden');\n  refs.loader.classList.add('is-hidden');\n  refs.errorMessage.insertAdjacentHTML('beforeend',` ${er}`);\n  refs.errorMessage.classList.remove('is-hidden');\n}\n\nexport { fillInBreeds, renderCatCard, showErrorMessage };\n","import '../css/common.css';\nimport refs from './refs.js';\nimport { Cat_API } from './cat-api.js';\nimport { fillInBreeds, renderCatCard, showErrorMessage } from './functions.js';\n\nconst cat_API = new Cat_API();\n\nrefs.select.addEventListener('change', onSelectCheck);\n\ncat_API\n  .fetchBreeds()\n  .then(data => {\n    fillInBreeds(data);\n    refs.select.classList.remove('is-hidden');\n  })\n  .catch(showErrorMessage)\n\n  .finally(refs.loader.classList.add('is-hidden'));\n\nfunction onSelectCheck({ target }) {\n  refs.cardContainer.innerHTML = '';\n  refs.loader.classList.remove('is-hidden');\n  cat_API.catBreed = target.value;\n\n  cat_API\n    .fetchCatByBreed()\n    .then(data => {\n      renderCatCard(data);\n      refs.loader.classList.add('is-hidden');\n    })\n    .catch(showErrorMessage);\n}\n","class Cat_API {\n    #API_KEY;\n    #BASE_URL;\n  constructor() {\n    this.#API_KEY =\n      'live_gUyKMIPXYlwzs67KbUZ11vjeXdPwKjUV4J7bV3JMCjqyz4pvxI3vRy4gbyMof5Jn';\n    this.#BASE_URL = 'https://api.thecatapi.com/v1/';\n    this.catBreedId = null;\n  }\n\n  fetchBreeds() {\n    const options = new URLSearchParams({\n      api_key: this.#API_KEY,\n    });\n      return fetch(`${this.#BASE_URL}breeds?${options}`).then(responce => {\n        if (!responce.ok) throw new Error(responce.status);\n        return responce.json();\n      });\n  }\n\n  fetchCatByBreed() {\nconst options = new URLSearchParams({\n  api_key: this.#API_KEY,\n  breed_ids: this.catBreedId,\n});\nreturn fetch(`${this.#BASE_URL}images/search?${options}`).then(responce => {\n  if (!responce.ok) throw new Error(responce.status);\n  return responce.json();\n});\n  }\n\n  set catBreed(newBreed) {\n    this.catBreedId = newBreed;\n  }\n\n\n};\n\nexport {Cat_API}\n"],"names":["$ee27a4d7c64fc8c4$export$2e2bcd8739ae039","select","document","querySelector","loader","errorMessage","cardContainer","$c5897a300754b7cd$export$5ff5a8cc839e4044","data","breedsSelectorMarkup","map","breed","id","name","join","insertAdjacentHTML","$c5897a300754b7cd$export$a97205b81e511ed7","cat","breeds","catCardMarkup","url","description","temperament","innerHTML","$c5897a300754b7cd$export$f3b8e31d958a9f24","er","classList","add","remove","$85a5f86b715fe7db$var$cat_API","API_KEY","BASE_URL","constructor","this","catBreedId","fetchBreeds","options","URLSearchParams","api_key","fetch","then","responce","ok","Error","status","json","fetchCatByBreed","breed_ids","catBreed","newBreed","addEventListener","target","value","catch","finally"],"version":3,"file":"index.ae6387b5.js.map"}